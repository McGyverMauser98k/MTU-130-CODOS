;58 00 00 00 27 03 24 03 33 00


;4C 14 C0 4C 05 C0 4C 0F C0 4C 00 C0 4C 60 C0 4C 5B C0 4C 96 C2 4C 91 C2 4C AE C3 4C C9 C4 4C 1B 03 4C 39 C3 4C 87 C3 4C 43 C4 4C 49 C4 4C AE C4 4C EA C4

;58 00 00 00 27 03 00 C0 A2 05

;48 20 1F C0 68 48 8A 48 20 2D C3 68 AA 68 60 48 20 1F C0 68 8D C7 02 A9 80 8D 0A 02 4C 63 C0 D8 A9 00 8D 07 02 8D 09 02 8A 10 06 A9 FF 8D 07 02 8A 18 6D 02 02 8D 06 02 AD 03 02 6D 07 02 8D 07 02 98 10 06 A9 FF 8D 09 02 98 18 6D 04 02 8D 08 02 AD 05 02 6D 09 02 8D 09 02 60 48 20 1F C0 68 8D C7 02 8E C8 02 8C C9 02 2C 0A 02 30 0B 70 09 20 26 C3 20 2D C3 4C 87 C2 20 E2 C2 20 26 C3 A2 03 8E D1 02 AD 0A 02 0A 0A 8D D2 02 AD 06 02 38 ED 02 02 85 F6 AD 07 02 ED 03 02 B0 15 BC 06 02 BD 02 02 9D 06 02 98 9D 02 02 CA 10 F0 8E D1 02 30 DA 85 F7 20 BE C2 20 06 D1 20 AC C1 A2 80 AD 08 02 38 ED 04 02 B0 09 A2 00 AD 04 02 38 ED 08 02 86 FB D0 03 4C 24 C2 85 FA A5 F7 D0 08 A5 F6 AA D0 5B 4C 09 C2 A5 F6 AA 38 E5 FA 85 F2 A5 F7 E9 00 85 F3 A5 F7 4A 85 F9 8A 6A 85 F8 A5 F9 D0 11 A5 F8 38 E5 FA 90 17 F0 14 85 F8 20 DE C1 4C 2E C1 A5 F8 38 E5 FA B0 F1 C6 F9 4C 0A C1 18 A5 F8 65 F2 85 F8 A5 F9 65 F3 85 F9 20 7E C1 E0 00 D0 02 C6 F7 CA D0 C6 C6 F7 10 C2 4C 69 C2 38 E5 FA B0 11 A5 FA 86 FA 85 F6 AA A5 FB 09 40 85 FB 8A 38 E5 FA 85 F2 8A 4A 85 F8 A5 F8 38 E5 FA 90 0E F0 0B 85 F8 20 DE C1 CA D0 EF 4C 69 C2 18 A5 F8 65 F2 85 F8 20 7E C1 CA D0 DF 4C 69 C2 24 FB 30 0D A5 F4 18 69 3C 85 F4 90 0F E6 F5 B0 0B A5 F4 38 E9 3C 85 F4 B0 02 C6 F5 E6 FC A4 FC C0 08 90 0A A0 00 84 FC E6 F4 D0 02 E6 F5 2C D2 02 10 10 0E 0C 02 2E 0B 02 90 24 A9 01 0D 0C 02 8D 0C 02 B9 01 C2 A0 00 2C 0A 02 70 05 11 F4 91 F4 60 30 07 49 FF 31 F4 91 F4 60 51 F4 91 F4 60 A5 FB 0A 10 B7 90 0E A4 FC A5 F4 E9 3C 85 F4 B0 BD C6 F5 90 B9 A4 FC A5 F4 69 3C 85 F4 90 AF E6 F5 B0 AB 80 40 20 10 08 04 02 01 A6 FA F0 5C 24 FB 10 0A 38 20 E5 C1 CA D0 F9 4C 69 C2 18 20 F3 C1 CA D0 F9 F0 45 A6 F6 F0 0C A4 FC C0 07 F0 0D 20 9A C1 CA D0 F4 C6 F7 10 F0 4C 69 C2 E0 08 90 EF 2C D2 02 30 EA E6 F4 D0 02 E6 F5 A0 00 A9 FF 2C 0A 02 70 0B 91 F4 8A 38 E9 08 AA D0 DF F0 D6 30 04 A9 00 F0 EF 51 F4 4C 53 C2 20 27 D1 A2 03 2C D1 02 30 0B BD 06 02 9D 02 02 CA 10 F7 30 09 BD 02 02 9D 06 02 CA 10 F7 AC C9 02 AD C7 02 AE C8 02 60 48 20 1F C0 68 8D C7 02 8E C8 02 8C C9 02 20 26 C3 20 2D C3 2C 0A 02 30 02 50 0F 4E D2 02 20 BE C2 20 06 D1 20 AC C1 20 27 D1 4C 87 C2 AD 04 02 20 61 CF AD 03 02 4A AD 02 02 6A 4A 4A 18 65 F2 85 F4 A5 F3 69 00 85 F5 AD 02 02 29 07 85 FC A8 60 8E CF 02 A2 00 D8 BD 02 02 C9 E0 BD 03 02 30 10 E9 01 90 14 A9 DF 9D 02 02 A9 01 9D 03 02 D0 08 A9 00 9D 02 02 9D 03 02 BD 05 02 F0 13 30 07 A9 FF 9D 04 02 D0 05 A9 00 9D 04 02 A9 00 9D 05 02 AE CF 02 60 8E CF 02 A2 04 D0 BA A2 03 BD 06 02 9D 02 02 CA 10 F7 60 8D C7 02 8E C8 02 8C C9 02 48 20 2D C3 68 20 5B C3 AD 06 02 18 69 06 8D 06 02 90 03 EE 07 02 4C 87 C2 D8 C9 80 B0 26 38 E9 20 90 21 8D CC 02 AD 02 02 C9 DB AD 03 02 E9 01 B0 12 AD 05 02 D0 0D C9 F7 B0 09 20 BE C2 AD CC 02 20 0B D0 60 8E C8 02 8C C9 02 20 2D C3 20 E2 C2 20 BE C2 20 06 D1 B9 01 C2 A0 00 31 F4 AA 20 27 D1 8A 48 AE C8 02 AC C9 02 68 60 8A 48 98 48 38 6E 13 02 A2 03 BD 02 02 9D 06 02 CA 10 F7 30 05 A9 00 8D 0D 02 20 49 C4 20 0C 03 08 20 43 C4 28 90 F3 A0 01 A2 00 C9 A0 90 44 C9 A4 90 0B C9 B0 90 3C C9 B4 B0 38 AC 23 02 84 FA 29 03 F0 27 C9 02 F0 13 B0 25 38 BD 02 02 E5 FA 9D 02 02 B0 C0 DE 03 02 4C C3 C3 98 18 7D 02 02 9D 02 02 90 B0 FE 03 02 4C C3 C3 A2 02 D0 EC A2 02 D0 D7 85 FA A2 03 BD 06 02 A8 BD 02 02 9D 06 02 98 9D 02 02 CA 10 EF 0E 13 02 20 6B D1 68 A8 68 AA A5 FA 60 0E 1C 02 B0 05 60 38 6E 1C 02 48 8A 48 98 48 20 E2 C2 AD 04 02 20 61 CF 20 06 D1 AD FC BF 29 F1 09 04 8D FC BF AD F1 BF AD FD BF 29 01 F0 F9 A0 3B B1 F2 49 FF 91 F2 88 10 F7 A9 C4 85 F2 A9 FB 85 F3 20 C4 C2 B9 01 C2 85 FA A2 00 A0 00 B1 F4 45 FA 91 F4 A5 F4 38 E9 3C 85 F4 B0 02 C6 F5 E8 D0 EC 20 27 D1 68 A8 68 AA 68 60 20 1C D1 AD FC BF 29 F1 8D FC BF AD F1 BF AD FD BF 29 01 F0 F9 8D C4 BF 4C 2F D1 20 AE C4 20 1C D1 AD FC BF 09 04 8D FC BF AD F1 BF 20 EA C4 B0 08 AD FD BF 29 01 F0 F4 18 4C 2F D1 20 1C D1 AD C0 BF 29 08 D0 02 18 60 AD C0 BF 29 07 8D 09 02 AD C1 BF 38 E9 02 8D 08 02 AD C2 BF 29 3F E9 00 A0 08 0E 08 02 2A C9 3C 90 02 E9 3C 2E 08 02 88 D0 F3 8D 06 02 C9 0A 90 04 E9 0A D0 F8 0A AA 2C C2 BF 10 01 E8 AC 09 02 BD 78 C5 39 A0 C5 F0 03 EE 06 02 BD 8C C5 39 A0 C5 F0 03 CE 06 02 A9 00 8D 07 02 AD 06 02 0A 0A 0A 2E 07 02 0D 09 02 E9 05 8D 06 02 B0 03 CE 07 02 AD 08 02 49 FF 8D 08 02 A9 00 8D 09 02 38 4C 2F D1 00 00 00 03 0F 00 00 3F 00 00 00 00 0F 00 00 0F FF 0F 00 00 C0 00 00 00 00 00 00 00 00 00 00 C0 00 00 00 00 00 00 C0 F1 01 02


;JUMP TABLE UPDATE AFTER IODRIVER.Z
;58 00 00 00 27 03 24 03 33 00
;   * = $0324
0324   4C 14 C0             JMP $C014			; SDRAW - TO DRAW A SOLID VECTOR FROM THE CURSOR TO (XX,YY)
0327   4C 05 C0             JMP $C005			; SMOVE - TO MOVE GRAPHIC CURSOR TO (XX,YY) WITHOUT DRAWING.				<--- START POINT $C005
032A   4C 0F C0             JMP $C00F			; SDRAWR - TO DRAW A SOLID WHITE VECTOR RELATIVE TO THE CURSOR.
032D   4C 00 C0             JMP $C000			; SMOVER - TO MOVE THE GRAPHIC CURSOR RELATIVE TO ITS PRESENT POSITION.
0330   4C 60 C0             JMP $C060			; SVEC - TO DRAW A VECTOR FROM THE CURSOR TO (XX,YY) ACCORDING TO GMODE AND DSHPAT
0333   4C 5B C0             JMP $C05B			; SVECR - TO DRAW A VECTOR RELATIVE TO THE CURSOR ACCORDING TO GMODE AND DSHPAT
0336   4C 96 C2             JMP $C296			; SDOT - TO DRAW A SINGLE DOT (PIXEL) AT (XX,YY) ACCORDING TO GMODE
0339   4C 91 C2             JMP $C291			; SDOTR - TO DRAW A SINGLE DOT (PIXEL) AT A POSITION RELATIVE TO THE CURSOR ACCORDING TO GMODE
033C   4C AE C3             JMP $C3AE			; SGRIN - TO ALLOW USER COORDINATE INPUT BY MANEUVERING A CURSOR WITH THE KEYBOAR CURSOR CONTROL KEYS.
033F   4C C9 C4             JMP $C4C9			; SLTPEN - ACTIVATE LIGHT PEN FOR ONE FRAME AND RETURN COORDINATES OF HIT, IF ANY.
0342   4C 1B 03             JMP $031B				;SKIPS GRAPHIC RUTINES IF NO GRAPHIC DRIVER WAS LOADED. IF SO APROPERIATE JUMP'S ARE AUTOMATICALY UPDATED.
0345   4C 39 C3             JMP $C339			; SDRWCH - TO DRAW A SINGLE CHARACTER AT (XX,YY)
0348   4C 87 C3             JMP $C387			; SISDOT - TO DETERMINE PIXEL AT (XX,YY) IS ON OR OFF.
034B   4C 43 C4             JMP $C443			; SOFFGC - TO TURN OFF THE GRAPHIC CROSSHAIR CURSOR.
034E   4C 49 C4             JMP $C449			; SONGC - TO TURN ON THE GRAPHIC CROSSHAIR CURSOR.
0351   4C AE C4             JMP $C4AE			; SINTLP - WAIT FOR END OF FRAME AND THEN ACTIVATE THE LIGHT PEN.
0354   4C EA C4             JMP $C4EA			; STSTLP - TEST FOR LIGHT PEN HIT AND RETURN COORDINATES IF A HIT.
                            .END
								
;MAIN GRAPHDRIVER PROGRAM							
;58 00 00 00 27 03 00 C0 A2 05

;* = $C000
;SMOVER - TO MOVE THE GRAPHIC CURSOR RELATIVE TO ITS PRESENT POSITION.
C000   48                   PHA
C001   20 1F C0             JSR LC01F
C004   68                   PLA

;SMOVE - TO MOVE GRAPHIC CURSOR TO (XX,YY) WITHOUT DRAWING.
C005   48                   PHA						;SAVE ACCUMULATOR
C006   8A                   TXA
C007   48                   PHA						;SAVE INDEX X
C008   20 2D C3             JSR LC32D				;COPY FINAL ENDPOINT IN TO INITIAL ENDPOINT
C00B   68                   PLA						
C00C   AA                   TAX						;RECOVER INDEX X
C00D   68                   PLA						;RECOVER ACCUMULATOR
C00E   60                   RTS						;RETURN FROM SUBROUTINE

;SDRAWR - TO DRAW A SOLID WHITE VECTOR RELATIVE TO THE CURSOR.
C00F   48                   PHA
C010   20 1F C0             JSR LC01F
C013   68                   PLA

;SDRAW - TO DRAW A SOLID VECTOR FROM THE CURSOR TO (XX,YY)
C014   8D C7 02             STA $02C7				;SAVE ACUMULATOR
C017   A9 80                LDA #$80
C019   8D 0A 02             STA $020A				;SET GMODE TO $80 - DRAW (DRAW WHITE LINE)
C01C   4C 63 C0             JMP LC063
C01F   D8         LC01F     CLD
C020   A9 00                LDA #$00
C022   8D 07 02             STA $0207
C025   8D 09 02             STA $0209
C028   8A                   TXA
C029   10 06                BPL LC031
C02B   A9 FF                LDA #$FF
C02D   8D 07 02             STA $0207
C030   8A                   TXA
C031   18         LC031     CLC
C032   6D 02 02             ADC $0202
C035   8D 06 02             STA $0206
C038   AD 03 02             LDA $0203
C03B   6D 07 02             ADC $0207
C03E   8D 07 02             STA $0207
C041   98                   TYA
C042   10 06                BPL LC04A
C044   A9 FF                LDA #$FF
C046   8D 09 02             STA $0209
C049   98                   TYA
C04A   18         LC04A     CLC
C04B   6D 04 02             ADC $0204
C04E   8D 08 02             STA $0208
C051   AD 05 02             LDA $0205
C054   6D 09 02             ADC $0209
C057   8D 09 02             STA $0209
C05A   60                   RTS 						;RETURN FROM SUBROUTINE

;SVECR - TO DRAW A VECTOR RELATIVE TO THE CURSOR ACCORDING TO GMODE AND DSHPAT
C05B   48                   PHA
C05C   20 1F C0             JSR LC01F
C05F   68                   PLA

;SVEC - TO DRAW A VECTOR FROM THE CURSOR TO (XX,YY) ACCORDING TO GMODE AND DSHPAT
C060   8D C7 02             STA $02C7					;SAVE ACCUMULATOR
C063   8E C8 02   LC063     STX $02C8					;SAVE INDEX X
C066   8C C9 02             STY $02C9					;SAVE INDEX Y
C069   2C 0A 02             BIT $020A					;CHECK GRAPHIC MODE
C06C   30 0B                BMI LC079
C06E   70 09                BVS LC079
C070   20 26 C3             JSR LC326
C073   20 2D C3             JSR LC32D
C076   4C 87 C2             JMP LC287
C079   20 E2 C2   LC079     JSR LC2E2					;CHECK BOUNDRIES
C07C   20 26 C3             JSR LC326
C07F   A2 03                LDX #$03
C081   8E D1 02             STX $02D1
C084   AD 0A 02             LDA $020A
C087   0A                   ASL A
C088   0A                   ASL A
C089   8D D2 02             STA $02D2
C08C   AD 06 02   LC08C     LDA $0206
C08F   38                   SEC
C090   ED 02 02             SBC $0202
C093   85 F6                STA $F6
C095   AD 07 02             LDA $0207
C098   ED 03 02             SBC $0203
C09B   B0 15                BCS LC0B2
C09D   BC 06 02   LC09D     LDY $0206,X
C0A0   BD 02 02             LDA $0202,X
C0A3   9D 06 02             STA $0206,X
C0A6   98                   TYA
C0A7   9D 02 02             STA $0202,X
C0AA   CA                   DEX
C0AB   10 F0                BPL LC09D
C0AD   8E D1 02             STX $02D1
C0B0   30 DA                BMI LC08C
C0B2   85 F7      LC0B2     STA $F7
C0B4   20 BE C2             JSR LC2BE
C0B7   20 06 D1             JSR $D106
C0BA   20 AC C1             JSR LC1AC
C0BD   A2 80                LDX #$80
C0BF   AD 08 02             LDA $0208
C0C2   38                   SEC
C0C3   ED 04 02             SBC $0204
C0C6   B0 09                BCS LC0D1
C0C8   A2 00                LDX #$00
C0CA   AD 04 02             LDA $0204
C0CD   38                   SEC
C0CE   ED 08 02             SBC $0208
C0D1   86 FB      LC0D1     STX $FB
C0D3   D0 03                BNE LC0D8
C0D5   4C 24 C2             JMP LC224
C0D8   85 FA      LC0D8     STA $FA
C0DA   A5 F7                LDA $F7
C0DC   D0 08                BNE LC0E6
C0DE   A5 F6                LDA $F6
C0E0   AA                   TAX
C0E1   D0 5B                BNE LC13E
C0E3   4C 09 C2             JMP LC209
C0E6   A5 F6      LC0E6     LDA $F6
C0E8   AA                   TAX
C0E9   38                   SEC
C0EA   E5 FA                SBC $FA
C0EC   85 F2                STA $F2
C0EE   A5 F7                LDA $F7
C0F0   E9 00                SBC #$00
C0F2   85 F3                STA $F3
C0F4   A5 F7                LDA $F7
C0F6   4A                   LSR A
C0F7   85 F9                STA $F9
C0F9   8A                   TXA
C0FA   6A                   ROR A
C0FB   85 F8                STA $F8
C0FD   A5 F9      LC0FD     LDA $F9
C0FF   D0 11                BNE LC112
C101   A5 F8                LDA $F8
C103   38                   SEC
C104   E5 FA                SBC $FA
C106   90 17                BCC LC11F
C108   F0 14                BEQ LC11E
C10A   85 F8      LC10A     STA $F8
C10C   20 DE C1             JSR LC1DE
C10F   4C 2E C1             JMP LC12E
C112   A5 F8      LC112     LDA $F8
C114   38                   SEC
C115   E5 FA                SBC $FA
C117   B0 F1                BCS LC10A
C119   C6 F9                DEC $F9
C11B   4C 0A C1             JMP LC10A
C11E   18         LC11E     CLC
C11F   A5 F8      LC11F     LDA $F8
C121   65 F2                ADC $F2
C123   85 F8                STA $F8
C125   A5 F9                LDA $F9
C127   65 F3                ADC $F3
C129   85 F9                STA $F9
C12B   20 7E C1             JSR LC17E
C12E   E0 00      LC12E     CPX #$00
C130   D0 02                BNE LC134
C132   C6 F7                DEC $F7
C134   CA         LC134     DEX
C135   D0 C6                BNE LC0FD
C137   C6 F7                DEC $F7
C139   10 C2                BPL LC0FD
C13B   4C 69 C2             JMP LC269
C13E   38         LC13E     SEC
C13F   E5 FA                SBC $FA
C141   B0 11                BCS LC154
C143   A5 FA                LDA $FA
C145   86 FA                STX $FA
C147   85 F6                STA $F6
C149   AA                   TAX
C14A   A5 FB                LDA $FB
C14C   09 40                ORA #$40
C14E   85 FB                STA $FB
C150   8A                   TXA
C151   38                   SEC
C152   E5 FA                SBC $FA
C154   85 F2      LC154     STA $F2
C156   8A                   TXA
C157   4A                   LSR A
C158   85 F8                STA $F8
C15A   A5 F8      LC15A     LDA $F8
C15C   38                   SEC
C15D   E5 FA                SBC $FA
C15F   90 0E                BCC LC16F
C161   F0 0B                BEQ LC16E
C163   85 F8                STA $F8
C165   20 DE C1             JSR LC1DE
C168   CA                   DEX
C169   D0 EF                BNE LC15A
C16B   4C 69 C2             JMP LC269
C16E   18         LC16E     CLC
C16F   A5 F8      LC16F     LDA $F8
C171   65 F2                ADC $F2
C173   85 F8                STA $F8
C175   20 7E C1             JSR LC17E
C178   CA                   DEX
C179   D0 DF                BNE LC15A
C17B   4C 69 C2             JMP LC269
C17E   24 FB      LC17E     BIT $FB
C180   30 0D                BMI LC18F
C182   A5 F4                LDA $F4
C184   18                   CLC
C185   69 3C                ADC #$3C
C187   85 F4                STA $F4
C189   90 0F                BCC LC19A
C18B   E6 F5                INC $F5
C18D   B0 0B                BCS LC19A
C18F   A5 F4      LC18F     LDA $F4
C191   38                   SEC
C192   E9 3C                SBC #$3C
C194   85 F4                STA $F4
C196   B0 02                BCS LC19A
C198   C6 F5                DEC $F5
C19A   E6 FC      LC19A     INC $FC
C19C   A4 FC                LDY $FC
C19E   C0 08                CPY #$08
C1A0   90 0A                BCC LC1AC
C1A2   A0 00                LDY #$00
C1A4   84 FC                STY $FC
C1A6   E6 F4                INC $F4
C1A8   D0 02                BNE LC1AC
C1AA   E6 F5                INC $F5
C1AC   2C D2 02   LC1AC     BIT $02D2
C1AF   10 10                BPL LC1C1
C1B1   0E 0C 02             ASL $020C
C1B4   2E 0B 02             ROL $020B
C1B7   90 24                BCC LC1DD
C1B9   A9 01                LDA #$01
C1BB   0D 0C 02             ORA $020C
C1BE   8D 0C 02             STA $020C
C1C1   B9 01 C2   LC1C1     LDA $C201,Y
C1C4   A0 00                LDY #$00
C1C6   2C 0A 02             BIT $020A
C1C9   70 05                BVS LC1D0
C1CB   11 F4                ORA ($F4),Y
C1CD   91 F4                STA ($F4),Y
C1CF   60                   RTS 						;RETURN FROM SUBROUTINE
C1D0   30 07      LC1D0     BMI LC1D9
C1D2   49 FF                EOR #$FF
C1D4   31 F4                AND ($F4),Y
C1D6   91 F4                STA ($F4),Y
C1D8   60                   RTS 						;RETURN FROM SUBROUTINE
C1D9   51 F4      LC1D9     EOR ($F4),Y
C1DB   91 F4                STA ($F4),Y
C1DD   60         LC1DD     RTS 						;RETURN FROM SUBROUTINE
C1DE   A5 FB      LC1DE     LDA $FB
C1E0   0A                   ASL A
C1E1   10 B7                BPL LC19A
C1E3   90 0E                BCC LC1F3
C1E5   A4 FC      LC1E5     LDY $FC
C1E7   A5 F4                LDA $F4
C1E9   E9 3C                SBC #$3C
C1EB   85 F4                STA $F4
C1ED   B0 BD                BCS LC1AC
C1EF   C6 F5                DEC $F5
C1F1   90 B9                BCC LC1AC
C1F3   A4 FC      LC1F3     LDY $FC
C1F5   A5 F4                LDA $F4
C1F7   69 3C                ADC #$3C
C1F9   85 F4                STA $F4
C1FB   90 AF                BCC LC1AC
C1FD   E6 F5                INC $F5
C1FF   B0 AB                BCS LC1AC
C201   80                 								;%10000000
C202   40                 								;%01000000
C203   20								                ;%00100000
C204   10               								;%00010000
C205   08                  								;%00001000
C206   04                  								;%00000100
C207   02                  								;%00000010
C208   01                  								;%00000001
C209   A6 FA                LDX $FA
C20B   F0 5C                BEQ LC269
C20D   24 FB                BIT $FB
C20F   10 0A                BPL LC21B
C211   38         LC211     SEC
C212   20 E5 C1             JSR LC1E5
C215   CA                   DEX
C216   D0 F9                BNE LC211
C218   4C 69 C2             JMP LC269
C21B   18         LC21B     CLC
C21C   20 F3 C1             JSR LC1F3
C21F   CA                   DEX
C220   D0 F9                BNE LC21B
C222   F0 45                BEQ LC269
C224   A6 F6      LC224     LDX $F6
C226   F0 0C                BEQ LC234
C228   A4 FC      LC228     LDY $FC
C22A   C0 07                CPY #$07
C22C   F0 0D                BEQ LC23B
C22E   20 9A C1   LC22E     JSR LC19A
C231   CA                   DEX
C232   D0 F4                BNE LC228
C234   C6 F7      LC234     DEC $F7
C236   10 F0                BPL LC228
C238   4C 69 C2             JMP LC269
C23B   E0 08      LC23B     CPX #$08
C23D   90 EF                BCC LC22E
C23F   2C D2 02             BIT $02D2
C242   30 EA                BMI LC22E
C244   E6 F4                INC $F4
C246   D0 02                BNE LC24A
C248   E6 F5                INC $F5
C24A   A0 00      LC24A     LDY #$00
C24C   A9 FF                LDA #$FF
C24E   2C 0A 02             BIT $020A
C251   70 0B                BVS LC25E
C253   91 F4      LC253     STA ($F4),Y
C255   8A                   TXA
C256   38                   SEC
C257   E9 08                SBC #$08
C259   AA                   TAX
C25A   D0 DF                BNE LC23B
C25C   F0 D6                BEQ LC234
C25E   30 04      LC25E     BMI LC264
C260   A9 00                LDA #$00
C262   F0 EF                BEQ LC253
C264   51 F4      LC264     EOR ($F4),Y
C266   4C 53 C2             JMP LC253
C269   20 27 D1   LC269     JSR $D127
C26C   A2 03                LDX #$03
C26E   2C D1 02             BIT $02D1
C271   30 0B                BMI LC27E
C273   BD 06 02   LC273     LDA $0206,X
C276   9D 02 02             STA $0202,X
C279   CA                   DEX
C27A   10 F7                BPL LC273
C27C   30 09                BMI LC287
C27E   BD 02 02   LC27E     LDA $0202,X
C281   9D 06 02             STA $0206,X
C284   CA                   DEX
C285   10 F7                BPL LC27E
C287   AC C9 02   LC287     LDY $02C9
C28A   AD C7 02             LDA $02C7
C28D   AE C8 02             LDX $02C8
C290   60                   RTS 						;RETURN FROM SUBROUTINE

;SDOTR - TO DRAW A SINGLE DOT (PIXEL) AT A POSITION RELATIVE TO THE CURSOR ACCORDING TO GMODE
C291   48                   PHA
C292   20 1F C0             JSR LC01F
C295   68                   PLA

;SDOT - TO DRAW A SINGLE DOT (PIXEL) AT (XX,YY) ACCORDING TO GMODE
C296   8D C7 02             STA $02C7					;SAVE A IN TEMP
C299   8E C8 02             STX $02C8					;SAVE X IN TEMP
C29C   8C C9 02             STY $02C9					;SAVE Y IN TEMP
C29F   20 26 C3             JSR LC326
C2A2   20 2D C3             JSR LC32D
C2A5   2C 0A 02             BIT $020A
C2A8   30 02                BMI LC2AC
C2AA   50 0F                BVC LC2BB
C2AC   4E D2 02   LC2AC     LSR $02D2
C2AF   20 BE C2             JSR LC2BE
C2B2   20 06 D1             JSR $D106
C2B5   20 AC C1             JSR LC1AC
C2B8   20 27 D1             JSR $D127
C2BB   4C 87 C2   LC2BB     JMP LC287
C2BE   AD 04 02   LC2BE     LDA $0204					;LOAD YC VALUE
C2C1   20 61 CF             JSR $CF61					;UPDATE CURSOR POSITION ON SCREEN - FROM IODRIVER.Z
C2C4   AD 03 02   LC2C4     LDA $0203					;LOAD XC HIGH BYTE
C2C7   4A                   LSR A						;WILL 0 IF 1 AND SET CARRY
C2C8   AD 02 02             LDA $0202					;LOAD XC LOW BYTE
C2CB   6A                   ROR A						;
C2CC   4A                   LSR A						;
C2CD   4A                   LSR A						;
C2CE   18                   CLC							;CLEAR CARRY FLAG
C2CF   65 F2                ADC $F2						;ADD TO LOW BYTE OF ACTUAL CURSOR POSITION POINTER
C2D1   85 F4                STA $F4						;SAVE NEW CURSOR POSITION POINTER
C2D3   A5 F3                LDA $F3						;LOAD PAGE OF ACTUAL CURSOR POSITION
C2D5   69 00                ADC #$00					;SAME LINE POSITION
C2D7   85 F5                STA $F5						;SAVE NEW POSITION
C2D9   AD 02 02             LDA $0202					;LOAD ACTUAL POSITION OF CURSOR
C2DC   29 07                AND #$07					;ISOLATE LAST 3 BITS
C2DE   85 FC                STA $FC						;SAVE THAT IN $FC TEMPORARY
C2E0   A8                   TAY							;STORE A IN TO Y
C2E1   60                   RTS 						;RETURN FROM SUBROUTINE

;AUTOMATIC BOUNDS CHECKING (IF XC OR XX IS NEGATIVE IT IS SET TO 0, OR GREATHER THAN 479 IT IS SET TO 479. IF YC OR YY IS NEGATIVE IS SET TO 0, OR IF GREATER THAN 255 IS SET TO 255.
C2E2   8E CF 02   LC2E2     STX $02CF					;SAVE INDEX X
C2E5   A2 00                LDX #$00					;LOAD 0 INTO X
C2E7   D8         LC2E7     CLD							;CLEAR DECIMAL MODE
C2E8   BD 02 02             LDA $0202,X					;LOAD COORDINATE OF WHERE TO CURSOR SHOULD GO - POINTER
C2EB   C9 E0                CMP #$E0					;COMPARE WITH 224 - MAXIMUM OF X VALUE 479 256+224
C2ED   BD 03 02             LDA $0203,X					;LOAD SECOND COORDINATE OF WHERE TO CURSOR SHOULD GO - PAGE
C2F0   30 10                BMI LC302					;CHECK VALUE IS IT ON MINUS?
C2F2   E9 01                SBC #$01					;DECREMENT 1
C2F4   90 14                BCC LC30A					;CHECK IS IT X OR Y?
C2F6   A9 DF                LDA #$DF					;LOAD 223 - SET X TO 479
C2F8   9D 02 02             STA $0202,X					;STORE VALUE
C2FB   A9 01                LDA #$01					;LOAD VALUE 1
C2FD   9D 03 02             STA $0203,X					;STORE VALUE
C300   D0 08                BNE LC30A
C302   A9 00      LC302     LDA #$00					;IF XC OR XX WAS MINUS SET THAT VALUE TO 0
C304   9D 02 02             STA $0202,X					;STORE VALUE
C307   9D 03 02             STA $0203,X					;STORE VALUE
C30A   BD 05 02   LC30A     LDA $0205,X					;LOAD GRAPHIC COORDINATE Y REGISTER 
C30D   F0 13                BEQ LC322					;SHOULD BE 0
C30F   30 07                BMI LC318					;IF MINUS
C311   A9 FF                LDA #$FF					;LOAD 255 IF GREATHER THAN
C313   9D 04 02             STA $0204,X					;STORE GRAPHIC Y COORDINATE REGISTER
C316   D0 05                BNE LC31D
C318   A9 00      LC318     LDA #$00					;SET TO 0
C31A   9D 04 02             STA $0204,X					;STORE GRAPHIC Y COORDINATE REGISTER LOW BYTE
C31D   A9 00      LC31D     LDA #$00					;SET TO 0
C31F   9D 05 02             STA $0205,X					;STORE GRAPHIC Y COORDINATE REGISTER HIGH BYTE
C322   AE CF 02   LC322     LDX $02CF					;RECOVER INDEX X
C325   60                   RTS 						;RETURN FROM SUBROUTINE


C326   8E CF 02   LC326     STX $02CF						;SAVE INDEX X
C329   A2 04                LDX #$04						;LOAD NEW VALUE
C32B   D0 BA                BNE LC2E7						;CHECK BOUNDRIES
C32D   A2 03      LC32D     LDX #$03						;LOAD X=3				- SET START POINT SAME AS END POINT OF CURSOR FOR X,Y
C32F   BD 06 02   LC32F     LDA $0206,X						;LOAD X,Y GRAPHIC COORDINATE "REGISTER" ---"209->205, 208->204 207->203 206->202"
C332   9D 02 02             STA $0202,X						;STORE IN X,Y COORDINATE OF THE GRAPHIC CURSOR POSITION.
C335   CA                   DEX								;DECREMENT X AND COPY ALL COORDINATES - MAKE IT 4 TIMES
C336   10 F7                BPL LC32F						;CHECK IS IT DONE?
C338   60                   RTS 						;RETURN FROM SUBROUTINE								;DONE GO BACK

;SDRWCH - TO DRAW A SINGLE CHARACTER AT (XX,YY)
;	ARGUMENTS: 				XX, YY = COORDINATES OF LOWER LEFT CORNER OF 6 BY 10 CHARACTER MATRIX.
;							A=ASCII CHARACTER CODE IN RANGE OF $20-$7F - OTHER WILL NOT BE DRAWN!!
;
;	ARGUMENTS RETURNED: 	XC,YC POSITION OF CHARACTER JUST DRAWN (XOPY OF XX,YY)
;							XX,YY POSITION OF NEXT CHARACTER TO DRAW (XX=XX+6, YY=YY		
;							A, X AND Y ARE PRESERVED
;
;
C339   8D C7 02             STA $02C7						;SAVE INDEX A
C33C   8E C8 02             STX $02C8						;SAVE INDEX X
C33F   8C C9 02             STY $02C9						;SAVE INDEX Y
C342   48                   PHA								;PUSH A=ASCII TO STACK
C343   20 2D C3             JSR LC32D						;COPY COORDINATES X AND Y "209->205, 208->204 207->203 206->202"
C346   68                   PLA								;RECOVER A=ASCII CODE
C347   20 5B C3             JSR LC35B
C34A   AD 06 02             LDA $0206
C34D   18                   CLC
C34E   69 06                ADC #$06
C350   8D 06 02             STA $0206
C353   90 03                BCC LC358
C355   EE 07 02             INC $0207
C358   4C 87 C2   LC358     JMP LC287
C35B   D8         LC35B     CLD								;CLEAR DECIMAL MODE
C35C   C9 80                CMP #$80						;CHECK IF IT'S IN ASCII RANGE BELOW $80
C35E   B0 26                BCS LC386						;IF BELOW $80 DON'T DRAW
C360   38                   SEC								;SET CARRY FLAG
C361   E9 20                SBC #$20						;CHEK IF IT'S IN ASCII RANGE ABOVE $20
C363   90 21                BCC LC386						;IF BELOW $20 DON'T DRAW
C365   8D CC 02             STA $02CC						;SAVE ASCII IN TEMP
C368   AD 02 02             LDA $0202						;LOAD STARTING POSITION (LOWER LEFT) FOR CHARACTER
C36B   C9 DB                CMP #$DB						;CHECK XX VALUE IS BETWEEN 0 AND 474
C36D   AD 03 02             LDA $0203
C370   E9 01                SBC #$01
C372   B0 12                BCS LC386						;DON'T DRAW IF CARRY SET
C374   AD 05 02             LDA $0205						;CHECK YY VALUE IS BETWEEN 0 AND 247
C377   D0 0D                BNE LC386						;DON'T DRAW IF Y IS ZERO 
C379   C9 F7                CMP #$F7						;CHECK IS BELOW 247
C37B   B0 09                BCS LC386						;DON'T DRAW IF IT'S OVER 247
C37D   20 BE C2             JSR LC2BE						;UPDATE POINTERS WHERE TO DRAW NEW CHARACTER
C380   AD CC 02             LDA $02CC						;LOAD ASCII CHARACTER FROM TEMP
C383   20 0B D0             JSR $D00B						;DRAW CHARACTER ON SCREEN USING IODRIVER.Z ROUTINE
C386   60         LC386     RTS 							;RETURN FROM SUBROUTINE

;SISDOT - TO DETERMINE PIXEL AT (XX,YY) IS ON OR OFF.
C387   8E C8 02             STX $02C8
C38A   8C C9 02             STY $02C9
C38D   20 2D C3             JSR LC32D
C390   20 E2 C2             JSR LC2E2					;CHECK BOUNDRIES
C393   20 BE C2             JSR LC2BE
C396   20 06 D1             JSR $D106
C399   B9 01 C2             LDA $C201,Y
C39C   A0 00                LDY #$00
C39E   31 F4                AND ($F4),Y
C3A0   AA                   TAX
C3A1   20 27 D1             JSR $D127
C3A4   8A                   TXA
C3A5   48                   PHA
C3A6   AE C8 02             LDX $02C8
C3A9   AC C9 02             LDY $02C9
C3AC   68                   PLA
C3AD   60                   RTS 						;RETURN FROM SUBROUTINE

;SGRIN - TO ALLOW USER COORDINATE INPUT BY MANEUVERING A CURSOR WITH THE KEYBOAR CURSOR CONTROL KEYS.
C3AE   8A                   TXA
C3AF   48                   PHA
C3B0   98                   TYA
C3B1   48                   PHA
C3B2   38                   SEC
C3B3   6E 13 02             ROR $0213
C3B6   A2 03                LDX #$03
C3B8   BD 02 02   LC3B8     LDA $0202,X
C3BB   9D 06 02             STA $0206,X
C3BE   CA                   DEX
C3BF   10 F7                BPL LC3B8
C3C1   30 05                BMI LC3C8
C3C3   A9 00      LC3C3     LDA #$00
C3C5   8D 0D 02             STA $020D
C3C8   20 49 C4   LC3C8     JSR LC449
C3CB   20 0C 03             JSR $030C
C3CE   08                   PHP
C3CF   20 43 C4             JSR LC443
C3D2   28                   PLP
C3D3   90 F3                BCC LC3C8
C3D5   A0 01                LDY #$01
C3D7   A2 00                LDX #$00
C3D9   C9 A0                CMP #$A0
C3DB   90 44                BCC LC421
C3DD   C9 A4                CMP #$A4
C3DF   90 0B                BCC LC3EC
C3E1   C9 B0                CMP #$B0
C3E3   90 3C                BCC LC421
C3E5   C9 B4                CMP #$B4
C3E7   B0 38                BCS LC421
C3E9   AC 23 02             LDY $0223
C3EC   84 FA      LC3EC     STY $FA
C3EE   29 03                AND #$03
C3F0   F0 27                BEQ LC419
C3F2   C9 02                CMP #$02
C3F4   F0 13                BEQ LC409
C3F6   B0 25                BCS LC41D
C3F8   38         LC3F8     SEC
C3F9   BD 02 02             LDA $0202,X
C3FC   E5 FA                SBC $FA
C3FE   9D 02 02             STA $0202,X
C401   B0 C0                BCS LC3C3
C403   DE 03 02             DEC $0203,X
C406   4C C3 C3             JMP LC3C3
C409   98         LC409     TYA
C40A   18                   CLC
C40B   7D 02 02             ADC $0202,X
C40E   9D 02 02             STA $0202,X
C411   90 B0                BCC LC3C3
C413   FE 03 02             INC $0203,X
C416   4C C3 C3             JMP LC3C3
C419   A2 02      LC419     LDX #$02
C41B   D0 EC                BNE LC409
C41D   A2 02      LC41D     LDX #$02
C41F   D0 D7                BNE LC3F8
C421   85 FA      LC421     STA $FA
C423   A2 03                LDX #$03
C425   BD 06 02   LC425     LDA $0206,X
C428   A8                   TAY
C429   BD 02 02             LDA $0202,X
C42C   9D 06 02             STA $0206,X
C42F   98                   TYA
C430   9D 02 02             STA $0202,X
C433   CA                   DEX
C434   10 EF                BPL LC425
C436   0E 13 02             ASL $0213
C439   20 6B D1             JSR $D16B
C43C   68                   PLA
C43D   A8                   TAY
C43E   68                   PLA
C43F   AA                   TAX
C440   A5 FA                LDA $FA
C442   60                   RTS 						;RETURN FROM SUBROUTINE

;SOFFGC - TO TURN OFF THE GRAPHIC CROSSHAIR CURSOR.
C443   0E 1C 02   LC443     ASL $021C
C446   B0 05                BCS LC44D
C448   60                   RTS 						;RETURN FROM SUBROUTINE

;SONGC - TO TURN ON THE GRAPHIC CROSSHAIR CURSOR.
C449   38         LC449     SEC
C44A   6E 1C 02             ROR $021C
C44D   48         LC44D     PHA
C44E   8A                   TXA
C44F   48                   PHA
C450   98                   TYA
C451   48                   PHA
C452   20 E2 C2             JSR LC2E2					;CHECK BOUNDRIES
C455   AD 04 02             LDA $0204
C458   20 61 CF             JSR $CF61
C45B   20 06 D1             JSR $D106
C45E   AD FC BF             LDA $BFFC
C461   29 F1                AND #$F1
C463   09 04                ORA #$04
C465   8D FC BF             STA $BFFC
C468   AD F1 BF             LDA $BFF1
C46B   AD FD BF   LC46B     LDA $BFFD
C46E   29 01                AND #$01
C470   F0 F9                BEQ LC46B
C472   A0 3B                LDY #$3B
C474   B1 F2      LC474     LDA ($F2),Y
C476   49 FF                EOR #$FF
C478   91 F2                STA ($F2),Y
C47A   88                   DEY
C47B   10 F7                BPL LC474
C47D   A9 C4                LDA #$C4
C47F   85 F2                STA $F2
C481   A9 FB                LDA #$FB
C483   85 F3                STA $F3
C485   20 C4 C2             JSR LC2C4
C488   B9 01 C2             LDA $C201,Y
C48B   85 FA                STA $FA
C48D   A2 00                LDX #$00
C48F   A0 00                LDY #$00
C491   B1 F4      LC491     LDA ($F4),Y
C493   45 FA                EOR $FA
C495   91 F4                STA ($F4),Y
C497   A5 F4                LDA $F4
C499   38                   SEC
C49A   E9 3C                SBC #$3C
C49C   85 F4                STA $F4
C49E   B0 02                BCS LC4A2
C4A0   C6 F5                DEC $F5
C4A2   E8         LC4A2     INX
C4A3   D0 EC                BNE LC491
C4A5   20 27 D1             JSR $D127
C4A8   68                   PLA
C4A9   A8                   TAY
C4AA   68                   PLA
C4AB   AA                   TAX
C4AC   68                   PLA
C4AD   60                   RTS 						;RETURN FROM SUBROUTINE

;SINTLP - WAIT FOR END OF FRAME AND THEN ACTIVATE THE LIGHT PEN.
C4AE   20 1C D1   LC4AE     JSR $D11C
C4B1   AD FC BF             LDA $BFFC
C4B4   29 F1                AND #$F1
C4B6   8D FC BF             STA $BFFC
C4B9   AD F1 BF             LDA $BFF1
C4BC   AD FD BF   LC4BC     LDA $BFFD
C4BF   29 01                AND #$01
C4C1   F0 F9                BEQ LC4BC
C4C3   8D C4 BF             STA $BFC4
C4C6   4C 2F D1             JMP $D12F

;SLTPEN - ACTIVATE LIGHT PEN FFOR ONE FRAME AND RETURN COORDINATES OF HIT, IF ANY.
C4C9   20 AE C4             JSR LC4AE
C4CC   20 1C D1             JSR $D11C
C4CF   AD FC BF             LDA $BFFC
C4D2   09 04                ORA #$04
C4D4   8D FC BF             STA $BFFC
C4D7   AD F1 BF             LDA $BFF1
C4DA   20 EA C4   LC4DA     JSR LC4EA
C4DD   B0 08                BCS LC4E7
C4DF   AD FD BF             LDA $BFFD
C4E2   29 01                AND #$01
C4E4   F0 F4                BEQ LC4DA
C4E6   18                   CLC
C4E7   4C 2F D1   LC4E7     JMP $D12F

;STSTLP - TEST FOR LIGHT PEN HIT AND RETURN COORDINATES IF A HIT.
C4EA   20 1C D1   LC4EA     JSR $D11C
C4ED   AD C0 BF             LDA $BFC0
C4F0   29 08                AND #$08
C4F2   D0 02                BNE LC4F6
C4F4   18                   CLC
C4F5   60                   RTS 						;RETURN FROM SUBROUTINE
C4F6   AD C0 BF   LC4F6     LDA $BFC0
C4F9   29 07                AND #$07
C4FB   8D 09 02             STA $0209
C4FE   AD C1 BF             LDA $BFC1
C501   38                   SEC
C502   E9 02                SBC #$02
C504   8D 08 02             STA $0208
C507   AD C2 BF             LDA $BFC2
C50A   29 3F                AND #$3F
C50C   E9 00                SBC #$00
C50E   A0 08                LDY #$08
C510   0E 08 02             ASL $0208
C513   2A         LC513     ROL A
C514   C9 3C                CMP #$3C
C516   90 02                BCC LC51A
C518   E9 3C                SBC #$3C
C51A   2E 08 02   LC51A     ROL $0208
C51D   88                   DEY
C51E   D0 F3                BNE LC513
C520   8D 06 02             STA $0206
C523   C9 0A      LC523     CMP #$0A
C525   90 04                BCC LC52B
C527   E9 0A                SBC #$0A
C529   D0 F8                BNE LC523
C52B   0A         LC52B     ASL A
C52C   AA                   TAX
C52D   2C C2 BF             BIT $BFC2
C530   10 01                BPL LC533
C532   E8                   INX
C533   AC 09 02   LC533     LDY $0209
C536   BD 78 C5             LDA $C578,X
C539   39 A0 C5             AND $C5A0,Y
C53C   F0 03                BEQ LC541
C53E   EE 06 02             INC $0206
C541   BD 8C C5   LC541     LDA $C58C,X
C544   39 A0 C5             AND $C5A0,Y
C547   F0 03                BEQ LC54C
C549   CE 06 02             DEC $0206
C54C   A9 00      LC54C     LDA #$00
C54E   8D 07 02             STA $0207
C551   AD 06 02             LDA $0206
C554   0A                   ASL A
C555   0A                   ASL A
C556   0A                   ASL A
C557   2E 07 02             ROL $0207
C55A   0D 09 02             ORA $0209
C55D   E9 05                SBC #$05
C55F   8D 06 02             STA $0206
C562   B0 03                BCS LC567
C564   CE 07 02             DEC $0207
C567   AD 08 02   LC567     LDA $0208
C56A   49 FF                EOR #$FF
C56C   8D 08 02             STA $0208
C56F   A9 00                LDA #$00
C571   8D 09 02             STA $0209
C574   38                   SEC
C575   4C 2F D1             JMP $D12F
C578   00                   BRK
C579   00                   BRK
C57A   00                   BRK
C57B   03                   ???                ;%00000011
C57C   0F                   ???                ;%00001111
C57D   00                   BRK
C57E   00                   BRK
C57F   3F                   ???                ;%00111111 '?'
C580   00                   BRK
C581   00                   BRK
C582   00                   BRK
C583   00                   BRK
C584   0F                   ???                ;%00001111
C585   00                   BRK
C586   00                   BRK
C587   0F                   ???                ;%00001111
C588   FF                   ???                ;%11111111
C589   0F                   ???                ;%00001111
C58A   00                   BRK
C58B   00                   BRK
C58C   C0 00                CPY #$00
C58E   00                   BRK
C58F   00                   BRK
C590   00                   BRK
C591   00                   BRK
C592   00                   BRK
C593   00                   BRK
C594   00                   BRK
C595   00                   BRK
C596   00                   BRK
C597   C0 00                CPY #$00
C599   00                   BRK
C59A   00                   BRK
C59B   00                   BRK
C59C   00                   BRK
C59D   00                   BRK
C59E   C0 F1                CPY #$F1
C5A0   01 02                ORA ($02,X)
                            .END

;auto-generated symbols and labels
 LC01F      $C01F
 LC32D      $C32D
 LC063      $C063
 LC031      $C031
 LC04A      $C04A
 LC079      $C079
 LC326      $C326
 LC287      $C287
 LC2E2      $C2E2
 LC0B2      $C0B2
 LC09D      $C09D
 LC08C      $C08C
 LC2BE      $C2BE
 LC1AC      $C1AC
 LC0D1      $C0D1
 LC0D8      $C0D8
 LC224      $C224
 LC0E6      $C0E6
 LC13E      $C13E
 LC209      $C209
 LC112      $C112
 LC11F      $C11F
 LC11E      $C11E
 LC1DE      $C1DE
 LC12E      $C12E
 LC10A      $C10A
 LC17E      $C17E
 LC134      $C134
 LC0FD      $C0FD
 LC269      $C269
 LC154      $C154
 LC16F      $C16F
 LC16E      $C16E
 LC15A      $C15A
 LC18F      $C18F
 LC19A      $C19A
 LC1C1      $C1C1
 LC1DD      $C1DD
 LC1D0      $C1D0
 LC1D9      $C1D9
 LC1F3      $C1F3
 LC21B      $C21B
 LC1E5      $C1E5
 LC211      $C211
 LC234      $C234
 LC23B      $C23B
 LC228      $C228
 LC22E      $C22E
 LC24A      $C24A
 LC25E      $C25E
 LC264      $C264
 LC253      $C253
 LC27E      $C27E
 LC273      $C273
 LC2AC      $C2AC
 LC2BB      $C2BB
 LC302      $C302
 LC30A      $C30A
 LC322      $C322
 LC318      $C318
 LC31D      $C31D
 LC2E7      $C2E7
 LC32F      $C32F
 LC35B      $C35B
 LC358      $C358
 LC386      $C386
 LC3B8      $C3B8
 LC3C8      $C3C8
 LC449      $C449
 LC443      $C443
 LC421      $C421
 LC3EC      $C3EC
 LC419      $C419
 LC409      $C409
 LC41D      $C41D
 LC3C3      $C3C3
 LC3F8      $C3F8
 LC425      $C425
 LC44D      $C44D
 LC46B      $C46B
 LC474      $C474
 LC2C4      $C2C4
 LC4A2      $C4A2
 LC491      $C491
 LC4BC      $C4BC
 LC4AE      $C4AE
 LC4EA      $C4EA
 LC4E7      $C4E7
 LC4DA      $C4DA
 LC4F6      $C4F6
 LC51A      $C51A
 LC513      $C513
 LC52B      $C52B
 LC523      $C523
 LC533      $C533
 LC541      $C541
 LC54C      $C54C
 LC567      $C567
